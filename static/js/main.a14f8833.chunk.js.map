{"version":3,"sources":["components/navbar/index.js","components/navbar/navbar.js","context/alert/alertContext.js","context/github/githubContext.js","components/search-bar/index.js","components/search-bar/search-bar.js","components/alert/index.js","components/alert/alert.js","components/card/index.js","components/card/card.js","pages/home/index.js","pages/home/home.js","pages/info/index.js","pages/info/info.js","components/user-info/index.js","components/user-info/user-info.js","pages/profile/index.js","pages/profile/profile.js","context/alert/alertReducer.js","context/types.js","context/alert/alertState.js","context/github/githubReducer.js","context/github/githubState.js","components/app/index.js","components/app/app.js","index.js"],"names":["Navbar","className","alignLinks","brand","to","centerChildren","id","menuIcon","options","draggable","edge","inDuration","onCloseEnd","onCloseStart","onOpenEnd","onOpenStart","outDuration","preventScrolling","exact","AlertContext","React","createContext","GithubContext","Searchbar","useState","value","setValue","alertContext","useContext","githubContext","label","onKeyPress","e","key","trim","searchUsers","hide","show","onChange","target","Alert","alert","useEffect","toastInstance","window","M","toast","html","displayLength","classes","dismiss","Card","user","header","image","avatar_url","waves","title","login","HomePage","users","loading","s","active","color","flashing","size","map","m","Info","UserInfo","repos","style","padding","margin","maxWidth","width","src","alt","name","location","bio","href","html_url","rel","blog","company","followers","following","public_repos","public_gists","data-field","repo","description","Profile","match","getUser","getRepos","params","handlers","state","action","payload","alertReducer","type","DEFAULT","AlertState","children","useReducer","dispatch","Provider","items","githubReducer","withCreds","url","process","GithubState","a","setLoading","axios","get","response","data","clearUsers","App","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a14f8833.chunk.js","sourcesContent":["import Navbar from './navbar';\r\nexport default Navbar;","import React from 'react'\r\nimport 'materialize-css';\r\nimport { Navbar } from 'react-materialize';\r\nimport { NavLink, Link } from 'react-router-dom';\r\n\r\nconst NavbarContainer = () => {\r\n    return (\r\n        <Navbar\r\n            className=\"black\"\r\n            alignLinks=\"right\"\r\n            brand={<Link className=\"brand-logo\" to=\"/react-hooks\">\r\n                Search users\r\n            </Link>}\r\n            centerChildren\r\n            id=\"mobile-nav\"\r\n            menuIcon=\"Menu\"\r\n            options={{\r\n                draggable: true,\r\n                edge: 'left',\r\n                inDuration: 250,\r\n                onCloseEnd: null,\r\n                onCloseStart: null,\r\n                onOpenEnd: null,\r\n                onOpenStart: null,\r\n                outDuration: 200,\r\n                preventScrolling: true\r\n            }}\r\n            >\r\n            <NavLink to=\"/react-hooks\" exact>Home</NavLink>\r\n            <NavLink to=\"/info\">Information</NavLink>\r\n        </Navbar>\r\n    )\r\n}\r\n\r\nexport default NavbarContainer;\r\n","import React from 'react';\r\n\r\nexport const AlertContext = React.createContext();","import React from 'react';\r\n\r\nexport const GithubContext = React.createContext();","import Searchbar from './search-bar';\r\nexport default Searchbar;","import React, { useContext, useState } from 'react';\r\nimport 'materialize-css';\r\nimport { TextInput } from 'react-materialize';\r\nimport { AlertContext } from '../../context/alert/alertContext';\r\nimport { GithubContext } from '../../context/github/githubContext';\r\n\r\nconst Searchbar = () => {\r\n\r\n    const [value, setValue] = useState('');\r\n\r\n    const alertContext = useContext(AlertContext);\r\n    const githubContext = useContext(GithubContext);\r\n\r\n    function keyPressHandler(e) {\r\n        if ( e.key !== 'Enter' ) {\r\n            return;\r\n        } \r\n\r\n        if(!value.trim()) {\r\n            alertContext.show('Please type user\\'s name');\r\n        } else {\r\n            githubContext.searchUsers(value.trim());\r\n            alertContext.hide();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <TextInput\r\n            label=\"Find user\"\r\n            onKeyPress={keyPressHandler}\r\n            onChange={(e) => setValue(e.target.value)}\r\n            value={value}\r\n        />\r\n    )\r\n}\r\n\r\nexport default Searchbar\r\n","import Alert from './alert';\r\nexport default Alert;","import { useContext, useEffect } from 'react';\r\nimport 'materialize-css';\r\nimport 'react-materialize';\r\nimport { AlertContext } from '../../context/alert/alertContext';\r\nimport './alert.scss';\r\n\r\nconst Alert = () => {\r\n\r\n    const { alert } = useContext(AlertContext)\r\n\r\n    useEffect(() => {\r\n        let toastInstance = null;\r\n\r\n        if ( !alert ) {\r\n            return undefined\r\n        } else {\r\n            toastInstance = window.M.toast({html: alert, displayLength: 60000, classes: 'red accent-3'})\r\n        }\r\n        return () => toastInstance.dismiss();\r\n    }, [alert])\r\n\r\n    return null;\r\n\r\n}\r\n\r\nexport default Alert;\r\n","import Card from './card';\r\nexport default Card;","import React from 'react'\r\nimport 'materialize-css';\r\nimport { Card, CardTitle } from 'react-materialize';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst CardContainer = ({ user }) => {\r\n    return (\r\n        <Card\r\n            header={<CardTitle image={user.avatar_url} waves=\"light\"/>}\r\n            title={user.login}\r\n            >\r\n            <p>\r\n                <Link to={'/profile/' + user.login}>\r\n                    More\r\n                </Link>\r\n            </p>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default CardContainer\r\n","import HomePage from './home.js'\r\nexport default HomePage;","import React, { Fragment, useContext } from 'react';\r\nimport Searchbar from '../../components/search-bar';\r\nimport Alert from '../../components/alert';\r\nimport {Row, Col, Preloader} from 'react-materialize';\r\nimport Card from '../../components/card';\r\nimport { GithubContext } from '../../context/github/githubContext';\r\n\r\nconst HomePage = () => {\r\n\r\n    const { users, loading } = useContext(GithubContext);\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <Alert />\r\n            <div className=\"container\">\r\n                <Searchbar />\r\n                <Row>\r\n                    {\r\n                        loading ? \r\n                            <Col s={12} className=\"center-align\">\r\n                                <Preloader\r\n                                    active\r\n                                    color=\"green\"\r\n                                    flashing={true}\r\n                                    size=\"small\"\r\n                                    className=\"center-align\"\r\n                                />\r\n                            </Col> :\r\n                        users.map((user) => {\r\n                            return (\r\n                                <Col m={4} s={12} key={user.id}>\r\n                                    <Card user={user} />\r\n                                </Col>\r\n                            );\r\n                        })\r\n                    }\r\n                </Row>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default HomePage;\r\n","import Info from './info';\r\nexport default Info;","import React from 'react'\r\n\r\nconst Info = () => {\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col s12 m6 offset-m3\">\r\n            <div className=\"card black\">\r\n                <div className=\"card-content white-text center-align\">\r\n                <span className=\"card-title\">Information</span>\r\n                Version <strong>1.0.0</strong>\r\n                </div>\r\n            </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Info\r\n","import UserInfo from './user-info';\r\nexport default UserInfo;","import React from 'react';\r\nimport 'materialize-css';\r\nimport { Badge, Table } from 'react-materialize';\r\n\r\nconst UserInfo = ({ user, repos }) => (\r\n    <div className=\"card\" style={{ padding: '50px 20px', margin: '2rem 0' }}>\r\n        <div className=\"card-body\">\r\n            <div className=\"row\">\r\n                <div className=\"col s6 center-align\">\r\n                    <img style={{ maxWidth: '300px', width: '100%' }} src={user.avatar_url} alt={user.name} />\r\n                    <h2>{ user.name }</h2>\r\n                    { user.location && <p>Location: { user.location }</p> }\r\n                </div>\r\n                <div className=\"col s6\">\r\n                    { user.bio && <> <h3>BIO: </h3> <p>{ user.bio }</p></> }\r\n                    <a \r\n                        href={user.html_url}\r\n                        rel=\"noopener noreferrer\"\r\n                        target=\"_blank\" \r\n                        className=\"btn btn-dark\">Open Profile</a>\r\n                    <ul>\r\n                        { user.login && <li> <strong>Username:</strong> { user.login }</li> }\r\n{                        user.blog && <li> <strong>Website:</strong> <a href={ user.blog } rel=\"noopener noreferrer\" target=\"_blank\">{ user.blog }</a></li> }\r\n                        { user.company && <li> <strong>Company:</strong> { user.company }</li> }\r\n                    </ul>\r\n                    <Badge\r\n                        className=\"deep-orange darken-2\"\r\n                        style={{color: '#fff'}}\r\n                        >\r\n                         Followers: { user.followers }\r\n                    </Badge>\r\n                    <Badge\r\n                        className=\"brown darken-3\"\r\n                        style={{color: '#fff'}}\r\n                        >\r\n                         Following: { user.following }\r\n                    </Badge>\r\n                    <Badge\r\n                        className=\"blue-grey darken-2\"\r\n                        style={{color: '#fff'}}\r\n                        >\r\n                         Repositories: { user.public_repos }\r\n                    </Badge>\r\n                    <Badge\r\n                        className=\"amber darken-4\"\r\n                        style={{color: '#fff'}}\r\n                        >\r\n                         Gists: { user.public_gists }\r\n                    </Badge>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <h3>Repositories</h3>\r\n        <Table>\r\n            <thead>\r\n                <tr>\r\n                <th data-field=\"id\">\r\n                    Name\r\n                </th>\r\n                <th data-field=\"name\">\r\n                    Description\r\n                </th>\r\n                <th data-field=\"price\">\r\n                    Link to the repository\r\n                </th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {\r\n                    repos.map((repo) => {\r\n                        return (\r\n                            <tr key={repo.id}>\r\n                                <td>\r\n                                    { repo.name }\r\n                                </td>\r\n                                <td>\r\n                                    { repo.description ? repo.description : 'no description' }\r\n                                </td>\r\n                                <td>\r\n                                    {\r\n                                        repo.html_url && <a\r\n                                            rel=\"noopener noreferrer\"\r\n                                            target=\"_blank\" \r\n                                            href={ repo.html_url }>\r\n                                                { repo.html_url }\r\n                                        </a>\r\n                                    }\r\n                                </td>\r\n                            </tr>\r\n                        );\r\n                    })\r\n                }\r\n            </tbody>\r\n        </Table>\r\n    </div>\r\n);  \r\n\r\n\r\nexport default UserInfo;","import Profile from './profile';\r\nexport default Profile;","import React, { useContext, useEffect } from 'react';\r\nimport { GithubContext } from '../../context/github/githubContext';\r\nimport 'materialize-css';\r\nimport { Preloader, Col, Row } from 'react-materialize';\r\nimport UserInfo from '../../components/user-info';\r\n\r\nconst Profile = ({ match }) => {\r\n\r\n    const { getUser, getRepos, loading, user, repos } = useContext(GithubContext);\r\n    const name = match.params.name;\r\n\r\n    useEffect(() => {\r\n        getUser(name);\r\n        getRepos(name)\r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h1>Profile</h1>\r\n            <Row>\r\n                {\r\n                    loading ? \r\n                    <Col s={12} className=\"center-align\">\r\n                        <Preloader\r\n                            active\r\n                            color=\"green\"\r\n                            flashing={true}\r\n                            size=\"small\"\r\n                            className=\"center-align\"\r\n                        />\r\n                    </Col> : <UserInfo user={user} repos={repos} />\r\n                }\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile\r\n","import { SHOW_ALERT, HIDE_ALERT } from \"../types\";\r\n\r\nconst handlers = {\r\n    [SHOW_ALERT]: (state, action) => action.payload,\r\n    [HIDE_ALERT]: () => null,\r\n    DEFAULT: (state) => state\r\n};\r\n\r\nexport const alertReducer = (state, action) => {\r\n    const handler = handlers[action.type] || handlers.DEFAULT;\r\n    return handler(state, action);\r\n}","export const SHOW_ALERT = 'SHOW_ALERT';\r\nexport const HIDE_ALERT = 'HIDE_ALERT';\r\n\r\n\r\nexport const SEARCH_USERS = 'SEARCH_USERS';\r\nexport const GET_USER = 'GET_USER';\r\nexport const CLEAR_USERS = 'CLEAR_USERS';\r\nexport const GET_REPOS = 'GET_REPOS';\r\nexport const SET_LOADING = 'SET_LOADING';","import React, { useReducer } from 'react'\r\nimport { AlertContext } from './alertContext';\r\nimport { alertReducer } from './alertReducer';\r\nimport { SHOW_ALERT, HIDE_ALERT } from '../types';\r\n\r\nconst AlertState = ({ children }) => {\r\n\r\n    const [ state, dispatch ] = useReducer(alertReducer);\r\n\r\n    const show = (payload = 'Something was wrong!!!') => {\r\n        dispatch({\r\n            type: SHOW_ALERT,\r\n            payload\r\n        })\r\n    }\r\n    const hide = () => {\r\n        dispatch({\r\n            type: HIDE_ALERT\r\n        })\r\n    }\r\n\r\n    return (\r\n        <AlertContext.Provider value={{\r\n            alert: state, show, hide\r\n        }}>\r\n            { children }\r\n        </AlertContext.Provider>\r\n    )\r\n}\r\n\r\nexport default AlertState\r\n","import { SEARCH_USERS, GET_USER, GET_REPOS, CLEAR_USERS, SET_LOADING } from \"../types\";\r\n\r\nconst handlers = {\r\n    [SEARCH_USERS]: (state, { payload }) => ({...state, users: payload.items, loading: false}),\r\n    [GET_USER]: (state, { payload }) => ({...state, user: payload, loading: false}), \r\n    [GET_REPOS]: (state, { payload }) => ({...state, repos: payload, loading: false}), \r\n    [CLEAR_USERS]: (state) => ({...state, users: []}),  \r\n    [SET_LOADING]: (state) => ({...state, loading: true})\r\n}\r\n\r\nexport const githubReducer = (state, action) => {\r\n    const handler = handlers[action.type] || handlers.DEFAULT;\r\n    return handler(state, action);\r\n}","import React, { useReducer } from 'react';\r\nimport { GithubContext } from './githubContext';\r\nimport { githubReducer } from './githubReducer';\r\nimport axios from 'axios';\r\nimport { SEARCH_USERS, GET_USER, GET_REPOS, SET_LOADING, CLEAR_USERS } from '../types';\r\n\r\nconst CLIENT_ID = process.env.REACT_APP_CLIENT_ID;\r\nconst CLIENT_SECRET = process.env.REACT_APP_CLIENT_SECRET;\r\n\r\nfunction withCreds(url) {\r\n    return `${url}client_id=${CLIENT_ID}&client_secret&=${CLIENT_SECRET}`;\r\n}\r\n\r\nconst GithubState = ({ children }) => {\r\n    \r\n    const initialState = {\r\n        users: [],\r\n        user: {},\r\n        repos: [],\r\n        loading: false\r\n    }\r\n    const [state, dispatch] = useReducer(githubReducer, initialState);\r\n    \r\n    async function searchUsers(value) {\r\n\r\n        setLoading();\r\n\r\n        const response = await axios.get(\r\n            withCreds(`https://api.github.com/search/users?q=${value}&`)\r\n        )\r\n        dispatch({\r\n            type: SEARCH_USERS,\r\n            payload: response.data\r\n        })\r\n    }\r\n\r\n    async function getUser(value) {\r\n\r\n        setLoading();\r\n\r\n        const response = await axios.get(\r\n            withCreds(`https://api.github.com/users/${value}?`)\r\n        )\r\n\r\n        dispatch({\r\n            type: GET_USER,\r\n            payload: response.data\r\n        })\r\n    }\r\n\r\n    async function getRepos(name) {\r\n\r\n        setLoading();\r\n        \r\n        const response = await axios.get(\r\n            withCreds(`https://api.github.com/users/${name}/repos?`)\r\n        )\r\n\r\n        dispatch({\r\n            type: GET_REPOS,\r\n            payload: response.data\r\n        })\r\n    }\r\n\r\n    const setLoading = () => dispatch({ type: SET_LOADING });\r\n    const clearUsers = () => dispatch({ type: CLEAR_USERS });\r\n\r\n    return (\r\n        <GithubContext.Provider value={{\r\n            searchUsers, getRepos, getUser,\r\n            clearUsers, setLoading, ...state\r\n        }}>\r\n            {\r\n                children\r\n            }\r\n        </GithubContext.Provider>\r\n    );\r\n}\r\n\r\nexport default GithubState;\r\n","import App from './app';\r\nexport default App;","import React from 'react'\r\nimport Navbar from '../navbar';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\r\nimport HomePage from '../../pages/home';\r\nimport Info from '../../pages/info';\r\nimport Profile from '../../pages/profile';\r\nimport AlerState from '../../context/alert/alertState';\r\nimport GithubState from '../../context/github/githubState';\r\n\r\nconst App = () => {\r\n    return (\r\n        <GithubState>\r\n            <AlerState>\r\n                <BrowserRouter>\r\n                    <Navbar />\r\n                    <Switch>\r\n                        <Route path=\"/\" exact component={HomePage} />\r\n                        <Route path=\"/react-hooks\" exact component={HomePage} />\r\n                        <Route path=\"/info/\" component={Info} />\r\n                        <Route path=\"/profile/:name\" component={Profile}  />\r\n                    </Switch>\r\n                </BrowserRouter>\r\n            </AlerState> \r\n        </GithubState>\r\n    )\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom'\r\nimport './index.scss';\r\n\r\n\r\nimport App from './components/app';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}